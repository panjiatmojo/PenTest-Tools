package PenTest;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;

public class UrlFetch {

	static String getContent(String urlString)
	{
		String output = "";
		URL url = null;

		try {

			/*	sanitize the target url first	*/
			urlString = UrlFetch.sanitizeUrl(urlString);

			url = new URL(urlString);
		} catch (MalformedURLException e) {
			e.printStackTrace(); 
		}

		URLConnection urlConn = null;
		try {
			urlConn = url.openConnection();
		} catch (IOException e1) {
			e1.printStackTrace();
		}

		/*	add the user agent to the request	*/
		urlConn.addRequestProperty("User-Agent", "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)");

		/*	get the url content	*/
		try (BufferedReader reader = new BufferedReader(new InputStreamReader(urlConn.getInputStream(), "UTF-8"))) {

			/*	read all line within the response	*/
			for (String line; (line = reader.readLine()) != null;) {
				output += line;
			}
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
		return output;
	}

	static ArrayList<String> getHeader(String url)
	{
		/*	get the header information	*/
		ArrayList<String> output = new ArrayList<String>();


		return output;
	}

	static String sanitizeUrl(String urlString)
	{

		/*	pattern to check for URL without protocol	*/
		String r1 = "^//.+?";
		/*	pattern to check for URL started with "."	*/
		String r2 = "^\\..+?";
		/*	correct pattern for URL	*/
		String r3 = "^http(s)*://.+?";

		if(urlString.matches(r1))
		{
			urlString = "http:" + urlString;
		}
		else if(urlString.matches(r2))
		{
			urlString = "http://" + urlString.replaceAll("^(\\.)", "");
		}
		else if(urlString.matches(r3))
		{

		}
		else
		{
			urlString = "http://" + urlString;
		}		
		return urlString;

	}

}
